{"ast":null,"code":"var _jsxFileName = \"/Users/kayajones/codingprojects/git/womenwiredglobe/src/components/SidePanel.js\";\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Button from '@material-ui/core/Button';\nimport About from './About';\nconst useStyles = makeStyles({\n  panel: {\n    backgroundColor: '#756585',\n    //for testing purposes\n    color: 'white',\n    //for testing purposes\n    width: '40vw',\n    height: '100%',\n    margin: '0px',\n    padding: '3%',\n    overflow: 'hidden',\n    fontSize: '120%'\n  },\n  button: {\n    //If no backgroundColor is set, it's transparent. Voilá!material \n    position: 'absolute',\n    top: '2%',\n    left: '2%',\n    color: 'white',\n    zIndex: '100'\n  }\n});\n\nconst SidePanel = () => {\n  const classes = useStyles();\n  const [state, setState] = useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false\n  });\n\n  const toggleDrawer = (anchor, open) => event => {\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state,\n      [anchor]: open\n    });\n  };\n\n  const list = anchor => /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.panel),\n    role: \"presentation\",\n    onClick: toggleDrawer(anchor, false),\n    onKeyDown: toggleDrawer(anchor, false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(About, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, ['right'].map(anchor => /*#__PURE__*/React.createElement(React.Fragment, {\n    key: anchor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.button,\n    onClick: toggleDrawer(anchor, true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, \"WomenWired Interactive Map\"), /*#__PURE__*/React.createElement(SwipeableDrawer, {\n    anchor: anchor,\n    open: state[anchor],\n    onClose: toggleDrawer(anchor, false),\n    onOpen: toggleDrawer(anchor, true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, list(anchor)))));\n};\n\nexport default SidePanel;","map":{"version":3,"sources":["/Users/kayajones/codingprojects/git/womenwiredglobe/src/components/SidePanel.js"],"names":["React","useState","clsx","makeStyles","SwipeableDrawer","Button","About","useStyles","panel","backgroundColor","color","width","height","margin","padding","overflow","fontSize","button","position","top","left","zIndex","SidePanel","classes","state","setState","bottom","right","toggleDrawer","anchor","open","event","type","key","list","map"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/core/styles'\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer'\nimport Button from '@material-ui/core/Button'\nimport About from './About'\n\nconst useStyles = makeStyles({\n  panel: {\n    backgroundColor: '#756585', //for testing purposes\n    color: 'white',           //for testing purposes\n    width: '40vw',\n    height: '100%',\n    margin: '0px',\n    padding: '3%',\n    overflow: 'hidden',\n    fontSize: '120%'\n  },\n  button: {\n    //If no backgroundColor is set, it's transparent. Voilá!material \n    position: 'absolute',\n    top: '2%',\n    left: '2%',\n    color: 'white',\n    zIndex: '100'\n  },\n});\n\nconst SidePanel = () => {\n  const classes = useStyles();\n  const [state, setState] = useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.panel)}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <About/>\n    </div>\n  );\n\n  return (\n    <div>\n      {['right'].map((anchor) => (\n        <React.Fragment key={anchor}>\n          <Button\n            className={classes.button}\n            onClick={toggleDrawer(anchor, true)}>\n              WomenWired Interactive Map \n          </Button>\n          <SwipeableDrawer\n            anchor={anchor}\n            open={state[anchor]}\n            onClose={toggleDrawer(anchor, false)}\n            onOpen={toggleDrawer(anchor, true)}\n          >\n            {list(anchor)}\n          </SwipeableDrawer>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n}\n\nexport default SidePanel"]},"metadata":{},"sourceType":"module"}