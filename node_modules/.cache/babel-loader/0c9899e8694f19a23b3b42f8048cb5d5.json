{"ast":null,"code":"var _jsxFileName = \"/Users/kayajones/codingprojects/git/globe-viz/src/components/Dropdown.js\";\nimport React, { useState } from 'react';\nimport Select from 'react-select';\n\nconst Dropdown = ({\n  selectedCountry,\n  setSelectedCountry\n}) => {\n  const [dropdownText, setDropdownText] = useState(\"select country\");\n  const options = [{\n    value: 'ch',\n    label: 'China'\n  }, {\n    value: 'us',\n    label: 'US'\n  }, {\n    value: 'fi',\n    label: 'Finland'\n  }, {\n    value: 'br',\n    label: 'Brazil'\n  }, {\n    value: 'au',\n    label: 'Australia'\n  }, {\n    value: 'eg',\n    label: 'Egypt'\n  }];\n  const customStyles = {\n    //This one is the panel on which the options are.\n    menu: (provided, state) => ({ ...provided,\n      width: \"80%\",\n      //borderBottom: '1px dotted orange',\n      //color: \"#fafafa\",\n      padding: 0,\n      backgroundColor: \"#FAFAFA\",\n      opacity: \"0.98\"\n    }),\n    option: (provided, state) => ({ ...provided,\n      color: \"#222222\",\n      paddingLeft: 10,\n      paddingTop: 5,\n      paddingBottom: 5,\n      fontSize: \"100%\",\n      width: \"120%\",\n      backgroundColor: \"#FAFAFA\"\n    }),\n    placeholder: (provided, state) => ({ ...provided,\n      color: \"#DFABFD\",\n      fontSize: \"100%\",\n      width: \"100%\" //backgroundColor: \"#FAFAFA\"\n\n    }),\n    //This is the wrapper of the whole thing, incls. input + arrow + options\n    control: (_, {\n      selectProps: {\n        width\n      }\n    }) => ({\n      //width: 200,\n      //backgroundColor: 'red',\n      padding: 0,\n      margin: 0,\n      height: 50\n    }),\n    valueContainer: () => ({//float: \"left\",\n      //width: \"200%\",\n      //fontSize: \"75%\"\n    }),\n    //This is the small arrow at the edge of the country dropdown menu\n    indicatorsContainer: (provided, state) => ({\n      float: \"left\",\n      width: \"20%\",\n      position: \"absolute\",\n      right: 0,\n      top: \"25%\"\n    }),\n    singleValue: (provided, state) => {\n      const opacity = state.isDisabled ? 0.5 : 1;\n      const transition = \"opacity 300ms\";\n      return { ...provided,\n        opacity,\n        transition\n      };\n    }\n  };\n\n  const handleCountryChange = selectedOption => {\n    //This takes care of 1) setting the correct country to the App's state 2) switching the dropdown's text.\n    setDropdownText(selectedOption.label);\n    setSelectedCountry(selectedOption.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    styles: customStyles,\n    value: selectedCountry,\n    onChange: e => handleCountryChange(e) //defaultValue\n    ,\n    placeholder: dropdownText,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 6\n    }\n  }));\n};\n\nexport default Dropdown;","map":{"version":3,"sources":["/Users/kayajones/codingprojects/git/globe-viz/src/components/Dropdown.js"],"names":["React","useState","Select","Dropdown","selectedCountry","setSelectedCountry","dropdownText","setDropdownText","options","value","label","customStyles","menu","provided","state","width","padding","backgroundColor","opacity","option","color","paddingLeft","paddingTop","paddingBottom","fontSize","placeholder","control","_","selectProps","margin","height","valueContainer","indicatorsContainer","float","position","right","top","singleValue","isDisabled","transition","handleCountryChange","selectedOption","e"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport Select from 'react-select'\n\nconst Dropdown = ({ selectedCountry, setSelectedCountry }) => {\n\n  const [dropdownText, setDropdownText] = useState(\"select country\")\n\n  const options = [\n    { value: 'ch', label: 'China' },\n    { value: 'us', label: 'US' },\n    { value: 'fi', label: 'Finland' },\n    { value: 'br', label: 'Brazil' },\n    { value: 'au', label: 'Australia' },\n    { value: 'eg', label: 'Egypt' },\n  ]\n\n  const customStyles = {\n    //This one is the panel on which the options are.\n    menu: (provided, state) => ({\n      ...provided,\n      width: \"80%\",\n      //borderBottom: '1px dotted orange',\n      //color: \"#fafafa\",\n      padding: 0,\n      backgroundColor: \"#FAFAFA\",\n      opacity: \"0.98\"\n    }),\n    option: (provided, state) => ({\n      ...provided,\n      color: \"#222222\",\n      paddingLeft: 10,\n      paddingTop: 5,\n      paddingBottom: 5,\n      fontSize: \"100%\",\n      width: \"120%\",\n      backgroundColor: \"#FAFAFA\"\n    }),\n\n    placeholder: (provided, state) => ({\n      ...provided,\n      color: \"#DFABFD\",\n      fontSize: \"100%\",\n      width: \"100%\"\n      //backgroundColor: \"#FAFAFA\"\n    }),\n\n    //This is the wrapper of the whole thing, incls. input + arrow + options\n    control: (_, { selectProps: { width } }) => ({\n      //width: 200,\n      //backgroundColor: 'red',\n      padding: 0,\n      margin: 0,\n      height: 50\n    }),\n    valueContainer: () => ({\n      //float: \"left\",\n      //width: \"200%\",\n      //fontSize: \"75%\"\n    }),\n\n\n    //This is the small arrow at the edge of the country dropdown menu\n    indicatorsContainer: (provided, state) => ({\n      float: \"left\",\n      width: \"20%\",\n      position: \"absolute\",\n      right: 0,\n      top: \"25%\"\n    }),\n    singleValue: (provided, state) => {\n      const opacity = state.isDisabled ? 0.5 : 1;\n      const transition = \"opacity 300ms\";\n\n      return { ...provided, opacity, transition };\n    }\n  };\n\n\n  const handleCountryChange = (selectedOption) => {\n    //This takes care of 1) setting the correct country to the App's state 2) switching the dropdown's text.\n    setDropdownText(selectedOption.label)\n    setSelectedCountry(selectedOption.value)\n  }\n\n\n  return (\n    <div>\n     <Select\n            styles={customStyles}\n            value={selectedCountry}\n            onChange={(e) => handleCountryChange(e)}\n            //defaultValue\n            placeholder={dropdownText}\n            options={options}\n          />\n    </div>\n  )\n}\n\nexport default Dropdown"]},"metadata":{},"sourceType":"module"}