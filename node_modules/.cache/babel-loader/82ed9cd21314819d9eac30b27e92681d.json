{"ast":null,"code":"var _jsxFileName = \"/Users/kayajones/codingprojects/git/womenwiredglobe/src/App.js\";\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CTAText from \"./components/CTAtext.js\";\nimport SidePanel from \"./components/SidePanel\";\nimport Globe from \"./components/Globe\";\nimport \"./App.css\"; // Example for accessing markers: AllMarkersByCountry.ch.markers --> list of objects\n\nimport { AllMarkersByCountry } from \"./markers/markers\"; //For now, styles are available here directly, for simplicity.\n//TODO: syled-components? Or sth else?\n\nconst useStyles = makeStyles(() => ({\n  pageStyle: {\n    height: \"100vh\",\n    //width: '100vw',\n    top: \"0px\",\n    margin: \"auto\",\n    padding: \"0px\",\n    overflow: \"hidden\",\n    backgroundColor: \"#020308\"\n  },\n  //Layout\n  halfPageLeft: {\n    width: \"39%\",\n    height: \"100%\",\n    //backgroundColor: 'red', //for testing purposes\n    padding: \"5px\",\n    float: \"left\",\n    display: \"inline\"\n  },\n  //Layout\n  halfPageRight: {\n    width: \"60%\",\n    height: \"100vh\",\n    backgroundColor: \"#020308\",\n    right: \"0px\",\n    float: \"left\",\n    display: \"inline\" //position: \"relative\"\n\n  },\n  articlesPositioning: {\n    //This effects the box that holds the articles' content.\n    position: \"fixed\",\n    top: \"10%\",\n    left: \"42%\",\n    width: \"57%\",\n    overflow: \"scroll\"\n  }\n})); //Function that fetches the marker data, marker by marker, and formats it to be ready for rendering.\n\nconst App = () => {\n  const classes = useStyles();\n  const [selectedCountry, setSelectedCountry] = useState(\"us\");\n  const [markers, setMarkers] = useState([]);\n  const [event, setEvent] = useState(null);\n  const [details, setDetails] = useState(null); //Load the markers ready to the markers-variable, ready for 'exploring'.\n\n  const prepareInitMarkers = () => setMarkers(initCountryMarkers(selectedCountry));\n\n  const initCountryMarkers = country => {\n    let countryMarkers;\n    !selectedCountry ? console.log(\"Nothing to show yet, pls select country!\") : countryMarkers = AllMarkersByCountry[country].markers.map(marker => ({ ...marker,\n      value: marker.value\n    }));\n    return countryMarkers;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.pageStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.halfPageLeft,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CTAText, {\n    selectedCountry: selectedCountry,\n    setSelectedCountry: setSelectedCountry,\n    prepareInitMarkers: () => prepareInitMarkers(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.halfPageRight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SidePanel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Globe, {\n    setDetails: setDetails,\n    setEvent: setEvent,\n    markers: markers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.articlesPositioning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 10\n    }\n  }, details), console.log(typeof details), console.log(details)));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/kayajones/codingprojects/git/womenwiredglobe/src/App.js"],"names":["React","useState","makeStyles","CTAText","SidePanel","Globe","AllMarkersByCountry","useStyles","pageStyle","height","top","margin","padding","overflow","backgroundColor","halfPageLeft","width","float","display","halfPageRight","right","articlesPositioning","position","left","App","classes","selectedCountry","setSelectedCountry","markers","setMarkers","event","setEvent","details","setDetails","prepareInitMarkers","initCountryMarkers","country","countryMarkers","console","log","map","marker","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CTAText from \"./components/CTAtext.js\";\nimport SidePanel from \"./components/SidePanel\";\nimport Globe from \"./components/Globe\";\n\nimport \"./App.css\";\n\n// Example for accessing markers: AllMarkersByCountry.ch.markers --> list of objects\nimport { AllMarkersByCountry } from \"./markers/markers\";\n\n//For now, styles are available here directly, for simplicity.\n//TODO: syled-components? Or sth else?\n\nconst useStyles = makeStyles(() => ({\n  pageStyle: {\n    height: \"100vh\",\n    //width: '100vw',\n    top: \"0px\",\n    margin: \"auto\",\n    padding: \"0px\",\n    overflow: \"hidden\",\n    backgroundColor: \"#020308\"\n  },\n  //Layout\n  halfPageLeft: {\n    width: \"39%\",\n    height: \"100%\",\n    //backgroundColor: 'red', //for testing purposes\n    padding: \"5px\",\n    float: \"left\",\n    display: \"inline\"\n  },\n  //Layout\n  halfPageRight: {\n    width: \"60%\",\n    height: \"100vh\",\n    backgroundColor: \"#020308\",\n    right: \"0px\",\n    float: \"left\",\n    display: \"inline\",\n    //position: \"relative\"\n  },\n  articlesPositioning: {\n    //This effects the box that holds the articles' content.\n    position: \"fixed\",\n    top: \"10%\",\n    left: \"42%\",\n    width: \"57%\",\n    overflow: \"scroll\"\n    \n  }\n}));\n\n//Function that fetches the marker data, marker by marker, and formats it to be ready for rendering.\n\nconst App = () => {\n  const classes = useStyles();\n\n  const [selectedCountry, setSelectedCountry] = useState(\"us\");\n  const [markers, setMarkers] = useState([]);\n  const [event, setEvent] = useState(null);\n  const [details, setDetails] = useState(null);\n\n  //Load the markers ready to the markers-variable, ready for 'exploring'.\n  const prepareInitMarkers = () =>\n    setMarkers(initCountryMarkers(selectedCountry));\n\n  const initCountryMarkers = country => {\n    let countryMarkers;\n    !selectedCountry\n      ? console.log(\"Nothing to show yet, pls select country!\")\n      : (countryMarkers = AllMarkersByCountry[country].markers.map(marker => ({\n          ...marker,\n          value: marker.value\n        })));\n    return countryMarkers;\n  };\n\n  return (\n    <div className={classes.pageStyle}>\n      {\" \"}\n      {/*Container for the whole page's content. */}\n      <div className={classes.halfPageLeft}>\n        <CTAText\n          selectedCountry={selectedCountry}\n          setSelectedCountry={setSelectedCountry}\n          prepareInitMarkers={() => prepareInitMarkers()}\n        />\n      </div>\n      <div className={classes.halfPageRight}>\n        <SidePanel />\n        <Globe setDetails={setDetails} setEvent={setEvent} markers={markers} />\n        {/*Don't understand a 100% how the thing below works...*/}\n        {<div className={classes.articlesPositioning}>{details}</div>}\n        {console.log(typeof details)}\n        {console.log(details)}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}