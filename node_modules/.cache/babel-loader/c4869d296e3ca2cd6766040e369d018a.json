{"ast":null,"code":"import _defineProperty from\"/Users/kayajones/codingprojects/git/womenwiredglobe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/kayajones/codingprojects/git/womenwiredglobe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/kayajones/codingprojects/git/womenwiredglobe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import clsx from'clsx';import{makeStyles}from'@material-ui/core/styles';import SwipeableDrawer from'@material-ui/core/SwipeableDrawer';import Button from'@material-ui/core/Button';import About from'./About';var useStyles=makeStyles({panel:{backgroundColor:'#756585',//for testing purposes\ncolor:'white',//for testing purposes\nwidth:'40vw',height:'100%',margin:'0px',padding:'3%',overflow:'hidden',fontSize:'120%'},button:{//If no backgroundColor is set, it's transparent. Voilá!material \nposition:'absolute',top:'2%',left:'2%',color:'white',zIndex:'100'}});var SidePanel=function SidePanel(){var classes=useStyles();var _useState=useState({top:false,left:false,bottom:false,right:false}),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];var toggleDrawer=function toggleDrawer(anchor,open){return function(event){if(event&&event.type==='keydown'&&(event.key==='Tab'||event.key==='Shift')){return;}setState(_objectSpread({},state,_defineProperty({},anchor,open)));};};var list=function list(anchor){return/*#__PURE__*/React.createElement(\"div\",{className:clsx(classes.panel),role:\"presentation\",onClick:toggleDrawer(anchor,false),onKeyDown:toggleDrawer(anchor,false)},/*#__PURE__*/React.createElement(About,null));};return/*#__PURE__*/React.createElement(\"div\",null,['right'].map(function(anchor){return/*#__PURE__*/React.createElement(React.Fragment,{key:anchor},/*#__PURE__*/React.createElement(Button,{className:classes.button,onClick:toggleDrawer(anchor,true)},\"WomenWired Interactive Map\"),/*#__PURE__*/React.createElement(SwipeableDrawer,{anchor:anchor,open:state[anchor],onClose:toggleDrawer(anchor,false),onOpen:toggleDrawer(anchor,true)},list(anchor)));}));};export default SidePanel;","map":{"version":3,"sources":["/Users/kayajones/codingprojects/git/womenwiredglobe/src/components/SidePanel.js"],"names":["React","useState","clsx","makeStyles","SwipeableDrawer","Button","About","useStyles","panel","backgroundColor","color","width","height","margin","padding","overflow","fontSize","button","position","top","left","zIndex","SidePanel","classes","bottom","right","state","setState","toggleDrawer","anchor","open","event","type","key","list","map"],"mappings":"+fAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,IAAP,KAAiB,MAAjB,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,eAAP,KAA4B,mCAA5B,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CAEA,GAAMC,CAAAA,SAAS,CAAGJ,UAAU,CAAC,CAC3BK,KAAK,CAAE,CACLC,eAAe,CAAE,SADZ,CACuB;AAC5BC,KAAK,CAAE,OAFF,CAEqB;AAC1BC,KAAK,CAAE,MAHF,CAILC,MAAM,CAAE,MAJH,CAKLC,MAAM,CAAE,KALH,CAMLC,OAAO,CAAE,IANJ,CAOLC,QAAQ,CAAE,QAPL,CAQLC,QAAQ,CAAE,MARL,CADoB,CAW3BC,MAAM,CAAE,CACN;AACAC,QAAQ,CAAE,UAFJ,CAGNC,GAAG,CAAE,IAHC,CAINC,IAAI,CAAE,IAJA,CAKNV,KAAK,CAAE,OALD,CAMNW,MAAM,CAAE,KANF,CAXmB,CAAD,CAA5B,CAqBA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtB,GAAMC,CAAAA,OAAO,CAAGhB,SAAS,EAAzB,CADsB,cAEIN,QAAQ,CAAC,CACjCkB,GAAG,CAAE,KAD4B,CAEjCC,IAAI,CAAE,KAF2B,CAGjCI,MAAM,CAAE,KAHyB,CAIjCC,KAAK,CAAE,KAJ0B,CAAD,CAFZ,wCAEfC,KAFe,eAERC,QAFQ,eAStB,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,MAAD,CAASC,IAAT,QAAkB,UAACC,KAAD,CAAW,CAChD,GAAIA,KAAK,EAAIA,KAAK,CAACC,IAAN,GAAe,SAAxB,GAAsCD,KAAK,CAACE,GAAN,GAAc,KAAd,EAAuBF,KAAK,CAACE,GAAN,GAAc,OAA3E,CAAJ,CAAyF,CACvF,OACD,CAEDN,QAAQ,kBAAMD,KAAN,oBAAcG,MAAd,CAAuBC,IAAvB,GAAR,CACD,CANoB,EAArB,CAQA,GAAMI,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAACL,MAAD,qBACX,2BACE,SAAS,CAAE3B,IAAI,CAACqB,OAAO,CAACf,KAAT,CADjB,CAEE,IAAI,CAAC,cAFP,CAGE,OAAO,CAAEoB,YAAY,CAACC,MAAD,CAAS,KAAT,CAHvB,CAIE,SAAS,CAAED,YAAY,CAACC,MAAD,CAAS,KAAT,CAJzB,eAME,oBAAC,KAAD,MANF,CADW,EAAb,CAWA,mBACE,+BACG,CAAC,OAAD,EAAUM,GAAV,CAAc,SAACN,MAAD,qBACb,oBAAC,KAAD,CAAO,QAAP,EAAgB,GAAG,CAAEA,MAArB,eACE,oBAAC,MAAD,EACE,SAAS,CAAEN,OAAO,CAACN,MADrB,CAEE,OAAO,CAAEW,YAAY,CAACC,MAAD,CAAS,IAAT,CAFvB,+BADF,cAME,oBAAC,eAAD,EACE,MAAM,CAAEA,MADV,CAEE,IAAI,CAAEH,KAAK,CAACG,MAAD,CAFb,CAGE,OAAO,CAAED,YAAY,CAACC,MAAD,CAAS,KAAT,CAHvB,CAIE,MAAM,CAAED,YAAY,CAACC,MAAD,CAAS,IAAT,CAJtB,EAMGK,IAAI,CAACL,MAAD,CANP,CANF,CADa,EAAd,CADH,CADF,CAqBD,CAjDD,CAmDA,cAAeP,CAAAA,SAAf","sourcesContent":["import React, { useState } from 'react'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/core/styles'\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer'\nimport Button from '@material-ui/core/Button'\nimport About from './About'\n\nconst useStyles = makeStyles({\n  panel: {\n    backgroundColor: '#756585', //for testing purposes\n    color: 'white',           //for testing purposes\n    width: '40vw',\n    height: '100%',\n    margin: '0px',\n    padding: '3%',\n    overflow: 'hidden',\n    fontSize: '120%'\n  },\n  button: {\n    //If no backgroundColor is set, it's transparent. Voilá!material \n    position: 'absolute',\n    top: '2%',\n    left: '2%',\n    color: 'white',\n    zIndex: '100'\n  },\n});\n\nconst SidePanel = () => {\n  const classes = useStyles();\n  const [state, setState] = useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.panel)}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <About/>\n    </div>\n  );\n\n  return (\n    <div>\n      {['right'].map((anchor) => (\n        <React.Fragment key={anchor}>\n          <Button\n            className={classes.button}\n            onClick={toggleDrawer(anchor, true)}>\n              WomenWired Interactive Map \n          </Button>\n          <SwipeableDrawer\n            anchor={anchor}\n            open={state[anchor]}\n            onClose={toggleDrawer(anchor, false)}\n            onOpen={toggleDrawer(anchor, true)}\n          >\n            {list(anchor)}\n          </SwipeableDrawer>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n}\n\nexport default SidePanel"]},"metadata":{},"sourceType":"module"}